
import java.awt.Font;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import newpackage.DbKapcsolat;
import newpackage.PdfGenerator;
import newpackage.Termék;
import newpackage.Vevő;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author kicsi
 */
public class Dokumentum extends javax.swing.JDialog {

    Font fFont;
    private final String fejlec = ("\n\n                                                                   Árajánlat     \n\n\n\n"
            + " ________________________________________________________________________________________\n"
            + "  Ajánlat kiállító adatai:"
            + "\t\t\t\tAjánlatkérő adatai:\n"
            + " ________________________________________________________________________________________\n");
    private final String lablec = ("________________________________________________________________________________________\n\n\n\t\t\t\t\tÖsszesen:\t");
    private DbKapcsolat db;
    private Vevő vevo = null;
    private ArrayList<String> dokumentumFejlec;
    private ArrayList<String> dokumentumRendeles;
    private Vector<Termék> rendeltTermekek;
    private String vevoAdatok = "";
    private float osszesen = 0;
    private String filenev = "";
    private String cimzett = "";
    private Termék termek = null;

    public Dokumentum(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setBounds(200, 0, 900, 735);
        dokumentumFejlec = new ArrayList<>();
        dokumentumRendeles = new ArrayList<>();

        dokumentumFejlec.add(fejlec);
        rendeltTermekek = new Vector<>();
        db = frame.getDbKapcsolat();
        cimzettLista.setModel(new DefaultComboBoxModel(db.getVevok()));
        termekLista.setModel(new DefaultComboBoxModel(db.getTermekek()));

        fFont = new Font("Dialog", Font.PLAIN, 12);

        textArea.setFont(fFont);
        textArea.setText(dokumentumFejlec.get(0));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cimzettLista = new javax.swing.JComboBox();
        termekLista = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        vevoKivalaszt = new javax.swing.JButton();
        termekHozzaad = new javax.swing.JButton();
        rendeltMennyiseg = new javax.swing.JTextField();
        keszGomb = new javax.swing.JButton();
        termekKivesz = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setText("Vásárló kiválasztása:");

        vevoKivalaszt.setText("jButton1");
        vevoKivalaszt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vevoKivalasztActionPerformed(evt);
            }
        });

        termekHozzaad.setText("+");
        termekHozzaad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                termekHozzaadActionPerformed(evt);
            }
        });

        keszGomb.setText("Ment");
        keszGomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keszGombActionPerformed(evt);
            }
        });

        termekKivesz.setText("-");
        termekKivesz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                termekKiveszActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rendeltMennyiseg, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(termekLista, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cimzettLista, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 21, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(vevoKivalaszt, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(keszGomb)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(termekHozzaad)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(termekKivesz)
                                .addGap(28, 28, 28))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cimzettLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(vevoKivalaszt)
                .addGap(42, 42, 42)
                .addComponent(termekLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rendeltMennyiseg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(termekHozzaad, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(termekKivesz))
                .addGap(47, 47, 47)
                .addComponent(keszGomb)
                .addContainerGap(260, Short.MAX_VALUE))
        );

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void vevoKivalasztActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vevoKivalasztActionPerformed

        textArea.setText("");
        vevo = (Vevő) cimzettLista.getSelectedItem();

        filenev = vevo.getVezetekNev() + " " + vevo.getKeresztNev();

        vevoAdatok = "  Kitalált Proba Kft.\t\t\t\t" + vevo.getVezetekNev() + " " + vevo.getKeresztNev()
                + "\n  1204 Budapest\t\t\t\t" + vevo.getVevoCim()
                + "\n  Sárrét utca 8/a\t\t\t\t\t" + "Telefonszám: " + vevo.getVevoTelefonSzam()
                + "\n  Adószám: 22255841\t\t\t\t" + "E-mail: " + vevo.getVevoEmailCim()
                + "\n  Telefonszám: +36 20 555 88 77"
                + "\n  E-mail: kitalaltprobakft@gmail.com\n"
                + "________________________________________________________________________________________\n"
                + "  Cikkszám\tMegnevezés\tMennyiség\t\tNettó Ár\tBrutto ár\n"
                + "________________________________________________________________________________________\n";

        dokumentumFejlec.clear();
        dokumentumFejlec.add(fejlec);
        dokumentumFejlec.add(vevoAdatok);
        cimzett = vevoAdatok;

        for (int i = 0; i < dokumentumFejlec.size(); i++) {
            textArea.append(dokumentumFejlec.get(i));

        }
        for (int i = 0; i < dokumentumRendeles.size(); i++) {
            textArea.append(dokumentumRendeles.get(i));

        }

        textArea.append(lablec + osszesen);
    }//GEN-LAST:event_vevoKivalasztActionPerformed

    private void termekHozzaadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_termekHozzaadActionPerformed
        if (!rendeltMennyiseg.getText().equals("")) {

            termek = (Termék) termekLista.getSelectedItem();

            if (!rendeltTermekek.contains(termek)) {
                String megnevezes = termek.getMegnevezes();
                String cikkszam = termek.getCikkszam();
                int nettoar = termek.getAr();
                float bruttoar = (float) (1.27 * nettoar);
                String nettoAr = String.valueOf(nettoar);
                String bruttoAr = String.valueOf(bruttoar);
                int darab = Integer.parseInt(rendeltMennyiseg.getText());
                termek.setRendeltMennyiseg(darab);
                String rendeles = "  " + cikkszam + "\t" + megnevezes + "\t" + darab + "\t\t" + nettoAr + "\t" + bruttoAr + "\n";
                dokumentumRendeles.add(rendeles);
                rendeltTermekek.add(termek);
                osszesen = osszesen + (bruttoar * darab);
            }

            textArea.setText("");

            for (int i = 0; i < dokumentumFejlec.size(); i++) {
                textArea.append(dokumentumFejlec.get(i));

            }
            for (int i = 0; i < dokumentumRendeles.size(); i++) {
                textArea.append(dokumentumRendeles.get(i));

            }
            textArea.append(lablec + osszesen + "Ft");
        }
    }//GEN-LAST:event_termekHozzaadActionPerformed

    private void keszGombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keszGombActionPerformed
        PdfGenerator g = new PdfGenerator(filenev, vevo, rendeltTermekek);
        EmailDialog email = new EmailDialog((Frame) this.getParent(), true, vevo, filenev);
        email.setVisible(true);
    }//GEN-LAST:event_keszGombActionPerformed

    private void termekKiveszActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_termekKiveszActionPerformed

        termek = (Termék) termekLista.getSelectedItem();
        String megnevezes = termek.getMegnevezes();
        String cikkszam = termek.getCikkszam();
        int nettoar = termek.getAr();
        float bruttoar = (float) (1.27 * nettoar);
        String nettoAr = String.valueOf(nettoar);
        String bruttoAr = String.valueOf(bruttoar);
        int darab = termek.getRendeltMennyiseg();

        String rendeles = "  " + cikkszam + "\t" + megnevezes + "\t" + darab + "\t\t" + nettoAr + "\t" + bruttoAr + "\n";

        if (rendeltTermekek.contains(termek)) {
            rendeltTermekek.remove(termek);
            osszesen = osszesen - (bruttoar * darab);

            for (int i = 0; i < dokumentumRendeles.size(); i++) {
                if (dokumentumRendeles.get(i).equals(rendeles)) {
                    dokumentumRendeles.remove(rendeles);
                }
            }
        }
        textArea.setText("");

        for (int i = 0; i < dokumentumFejlec.size(); i++) {
            textArea.append(dokumentumFejlec.get(i));

        }
        for (int i = 0; i < dokumentumRendeles.size(); i++) {
            textArea.append(dokumentumRendeles.get(i));

        }
        textArea.append(lablec + osszesen + "Ft");
        JOptionPane.showMessageDialog(null, "Termék törölve!");
    }//GEN-LAST:event_termekKiveszActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dokumentum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dokumentum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dokumentum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dokumentum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Dokumentum dialog = new Dokumentum(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cimzettLista;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton keszGomb;
    private javax.swing.JTextField rendeltMennyiseg;
    private javax.swing.JButton termekHozzaad;
    private javax.swing.JButton termekKivesz;
    private javax.swing.JComboBox termekLista;
    private javax.swing.JTextArea textArea;
    private javax.swing.JButton vevoKivalaszt;
    // End of variables declaration//GEN-END:variables
}
